
Процедура ОформитьДокументыПродажи(ЧислоПродаж) Экспорт

	ГСЧ = Новый ГенераторСлучайныхЧисел();
	ВсеКлиенты = ВсеКлиентыИзСправочника();
	ВсеТовары = ВсяНоменклатураИзСправочника();
	
	Если ВсеКлиенты.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Сначала добавьте клиента!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Для Счетчик = 1 По ЧислоПродаж Цикл
		СлучайныйКлиентИзСправочника = ПолучитьСлучайногоКлиента(ВсеКлиенты, ГСЧ);
		СлучайныеТовары = ВыбратьТоварыКПродажеСлучайно(ВсеТовары, ГСЧ);
		ОформитьПродажу(СлучайныйКлиентИзСправочника, СлучайныеТовары, ГСЧ);	
	КонецЦикла;
	
	

КонецПроцедуры

Функция ВыбратьТоварыКПродажеСлучайно(ВсеТовары, ГСЧ)
	
	//от 1 до 60 - 1 товар
	// от 60 до 85 - 2 товара
	// от 85 до 94 - 3 товара
	// от 94 до 98 - 4 товара
	// от 99 до 100 - 5 товаров
	СлучайныеТовары = Новый Массив;
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 100);
	ЧислоТоваров = 0;
	Если СлучайноеЧисло <= 60 Тогда
		
		ЧислоТоваров = 1;
		
	Иначе Если СлучайноеЧисло <= 85 Тогда
			
			ЧислоТоваров = 2;
			
		Иначе Если СлучайноеЧисло <= 94  Тогда
				
				ЧислоТоваров = 3;
				
			Иначе Если СлучайноеЧисло <= 98  Тогда
					
					ЧислоТоваров = 4;
					
				Иначе 	ЧислоТоваров = 5;
	
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для Счетчик = 1 По ЧислоТоваров Цикл
		
		НовыйСлучайныйТовар = ВсеТовары[ГСЧ.СлучайноеЧисло(0, ВсеТовары.Количество()-1)];		
		СлучайныеТовары.Добавить(НовыйСлучайныйТовар);
		
	КонецЦикла;

	СлучайныеТоварыИтог = Новый Массив;
	
	Для Каждого Товар Из СлучайныеТовары Цикл		
		КоличествоТовара = 0;
		Для Каждого ТоварПовторился из СлучайныеТовары Цикл		
			Если Товар.Ссылка = ТоварПовторился.Ссылка Тогда

				КоличествоТовара = КоличествоТовара + 1;
							
			КонецЕсли;
			
		КонецЦикла;
		
		ТоварКоличество = Новый Структура;
		ТоварКоличество.Вставить("Товар", Товар);
		ТоварКоличество.Вставить("Количество", КоличествоТовара);
		
		Если СлучайныеТоварыИтог.Количество() <> 0 Тогда
			Добавление = Истина;
			Для Каждого ТоварСКОличеством Из СлучайныеТоварыИтог Цикл
				Если ТоварСКОличеством.Товар = ТоварКоличество.Товар Тогда
					Добавление = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если Добавление Тогда
				СлучайныеТоварыИтог.Добавить(ТоварКоличество);
			КонецЕсли;
		Иначе 
			СлучайныеТоварыИтог.Добавить(ТоварКоличество);
		КонецЕсли;
	КонецЦикла;
	

	
	Возврат СлучайныеТоварыИтог;
	
КонецФункции

Функция ОформитьПродажу(Клиент, Товары, ГСЧ)
	
	ДокОбъект = Документы.Продажа.СоздатьДокумент();
	
	ДокОбъект.Заполнить(Неопределено);
	ДокОбъект.Дата = ТекущаяДатаСеанса();
	ДокОбъект.Клиент = Клиент;
	ДокОбъект.ОтветственныйСотрудник = Справочники.Сотрудники.НайтиПоНаименованию("ТестовыйСотрудник");
	
	Для Каждого Товар Из Товары Цикл
		НоваяСтрокаТЧ = ДокОбъект.ТоварыТЧ.Добавить();
		НоваяСтрокаТЧ.Номенклатура = Товар.Товар;
		НоваяСтрокаТЧ.Количество = Товар.Количество;
		НоваяСтрокаТЧ.Цена = (РегистрыСведений.ЦеныНоменклатуры.ЦеныНоменклатуры(Товар.Товар, ТекущаяДатаСеанса())) * Товар.Количество;
	КонецЦикла;
	
	ДокОбъект.ИтоговаяСумма = ДокОбъект.ТоварыТЧ.Итог("Цена");
	
    Если Не ДокОбъект.ПроверитьЗаполнение() Тогда
		ВызватьИсключение "Не удалось записать продажу.";
	КонецЕсли;
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецФункции

Функция ВсяНоменклатураИзСправочника()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВсяНоменклатура = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		ВсяНоменклатура.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ВсяНоменклатура;
	
КонецФункции

Функция ВсеКлиентыИзСправочника()
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Клиенты.Ссылка
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВсеКлиенты = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		ВсеКлиенты.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ВсеКлиенты;
	
КонецФункции

Функция ПолучитьСлучайногоКлиента(Клиенты, ГСЧ)

	СлучайныйКлиент = Клиенты[ГСЧ.СлучайноеЧисло(0, Клиенты.Количество()-1)];

	Возврат СлучайныйКлиент;	
КонецФункции

Процедура ДобавитьКлиентов(ЧислоДобавляемых) Экспорт
	// Прочитать всех клиентов из файла в массив
	// Случайным образом выбрать элемент массива
	// Проверить, есть ли такой клиент уже в базе
	// Записать
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	

	
	Для Счетчик = 1 По ЧислоДобавляемых Цикл
		
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 500);
		СлучайныйКлиентФИО = ПолучитьМакет("СлучайныеФИО").ПолучитьСтроку(СлучайноеЧисло);
		
		Если Не КлиентСуществует(СлучайныйКлиентФИО) Тогда
			ДобавитьКлиента(СлучайныйКлиентФИО);
		Иначе
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = СтрШаблон("Клиент с такими ФИО уже есть в базе: %1", СлучайныйКлиентФИО);
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЦикла;
	

	
КонецПроцедуры

Процедура УдалитьВсехКлиентов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Клиенты.Ссылка
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Клиент = Выборка.Ссылка.ПолучитьОбъект();
		Клиент.Удалить();
	
	КонецЦикла;
	
	
КонецПроцедуры

Процедура УдалитьВсеПродажи() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Продажа.Ссылка
	|ИЗ
	|	Документ.Продажа КАК Продажа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Клиент = Выборка.Ссылка.ПолучитьОбъект();
		Клиент.Удалить();
	
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьКлиента(ФИО)
	
	НовыйКлиент = Справочники.Клиенты.СоздатьЭлемент();
	НовыйКлиент.Наименование = ФИО;
	НовыйКлиент.Записать();
	
КонецПроцедуры

Функция КлиентСуществует(ФИО)
	
	ВозможныйКлиент = Справочники.Клиенты.НайтиПоНаименованию(ФИО);
	
	Если ВозможныйКлиент.Ссылка.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции